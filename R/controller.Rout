
R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> #------------------------------------------------------------------
> source('functions.R')
> require(maptools)
Loading required package: maptools
Loading required package: sp
Checking rgeos availability: TRUE
Please note that 'maptools' will be retired by the end of 2023,
plan transition at your earliest convenience;
some functionality will be moved to 'sp'.
> require(mapdata)
Loading required package: mapdata
Loading required package: maps
> #------------------------------------------------------------------
> sql.command <- "SELECT * FROM COREX.Sites"
> d <- sql.wrapper(sql.command,user,password)
Loading required package: RMySQL
Loading required package: DBI
Loading required package: odbc
> #------------------------------------------------------------------
> xmn <- min(d$Longitude, na.rm=T)
> xmx <- max(d$Longitude, na.rm=T)
> ymn <- min(d$Latitude, na.rm=T)
> ymx <- max(d$Latitude, na.rm=T)
> #------------------------------------------------------------------
> svg(file = '../tools/plots/map.svg', width = 16, height = 9 )
> par(mar=c(0,0,0,0))
> plot(NULL,xlim=c(xmn,xmx),ylim=c(ymn,ymx),bty='n',xaxs='i',yaxs='i',main='',xlab='',ylab='',xaxt='n',yaxt='n')
> polygon(x=c(xmn,xmx,xmx,xmn),y=c(ymn,ymn,ymx,ymx),col='steelblue',border=NA)
> map('world',xlim=c(xmn,xmx),ylim=c(ymn,ymx),col='grey',add=T, fill=T, border='grey90')
> points(d$Longitude,d$Latitude, col='firebrick',pch=20, cex=1)
> dev.off()
null device 
          1 
> #------------------------------------------------------------------
> 	
> 	
> 	
> 	
> 
> proc.time()
   user  system elapsed 
  1.380   0.195   2.421 
