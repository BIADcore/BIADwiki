source('functions.R')
sql.command <- "SELECT * FROM COREX.Sites"#
d <- sql.wrapper(sql.command,user,password)
head(d)
rand_lng = function(n = 10) rnorm(n, -93.65, .01)#
rand_lat = function(n = 10) rnorm(n, 42.0285, .01)
m <- leaflet()
library(leaflet)
install.packages('leaflet')
install.packages('rlang')
install.packages('leaflet')
install.packages('htmlwidgets')
remove.packages('htmlwidgets')
install.packages('htmlwidgets')
install.packages('leaflet')
remove.packages('htmlwidgets')
install.packages('htmlwidgets')
.libPaths()
install.packages('htmlwidgets')
install.packages('leaflet')
install.packages('rlang')
install.packages('leaflet')
# overheads#
#------------------------------------------------------------------#
source('functions.R')#
#------------------------------------------------------------------#
sql.command <- "SELECT * FROM COREX.Sites"#
d <- sql.wrapper(sql.command,user,password)
source('functions.R')
sql.command <- "SELECT * FROM COREX.Sites"
d <- sql.wrapper(sql.command,user,password)
remove.packages('rlang')
install.packges('rlang')
install.packages('rlang')
source('functions.R')
sql.command <- "SELECT * FROM COREX.Sites"
d <- sql.wrapper(sql.command,user,password)
# overheads#
#------------------------------------------------------------------#
source('functions.R')#
#------------------------------------------------------------------#
sql.command <- "SELECT * FROM COREX.Sites"#
d <- sql.wrapper(sql.command,user,password)
#------------------------------------------------------------------#
# overheads#
#------------------------------------------------------------------#
source('functions.R')#
#------------------------------------------------------------------#
sql.command <- "SELECT * FROM COREX.Sites"#
d <- sql.wrapper(sql.command,user,password)
packages.remove('ellipsis')
remove.packages('ellipsis')
remove.packages('vctrs')
install.packages('ellipses')
source('functions.R')
sql.command <- "SELECT * FROM COREX.Sites"
d <- sql.wrapper(sql.command,user,password)
remove.packages('rlang')
require(remotes)
install.packages('remotes')
require(remotes)
install.packages('rlang')
#------------------------------------------------------------------#
# overheads#
#------------------------------------------------------------------#
source('functions.R')#
#------------------------------------------------------------------#
sql.command <- "SELECT * FROM COREX.Sites"#
d <- sql.wrapper(sql.command,user,password)
uninstall.packages('rlang')
.packages('rlang')remove
remove.packages('rlang')
require(remotes)
install_version("rlang", version = "0.4.12")
install.packages("https://cran.r-project.org/src/contrib/Archive/rlang/rlang_0.4.12.tar.gz", repo=NULL, type="source")
source('functions.R')#
library(leaflet)#
library(htmlwidgets)#
#library(webshot)#
library(mapview)
install.packages('mapview')
source('functions.R')
library(leaflet)
library(htmlwidgets)
#library(webshot)
library(mapview)
install.packages('mapview')
install.packages('Rcpp')
source('functions.R')#
library(leaflet)
library(mapview)
install.packages('mapview')
mp <- map('world',xlim=range(d$Longitude,na.rm=T),ylim=range(d$Latitude, na.rm=T),col='grey',add=T, fill=T, border='grey90',plot=F)
source('functions.R')#
require(maptools)#
require(mapdata)
install.packages('mapdata')
require(maptools)#
require(mapdata)#
#------------------------------------------------------------------#
#
#------------------------------------------------------------------#
mp <- map('world',xlim=range(d$Longitude,na.rm=T),ylim=range(d$Latitude, na.rm=T),col='grey',add=T, fill=T, border='grey90',plot=F)
#------------------------------------------------------------------#
source('functions.R')#
require(maptools)#
require(mapdata)#
#------------------------------------------------------------------#
sql.command <- "SELECT * FROM COREX.Sites"#
d <- sql.wrapper(sql.command,user,password)#
#------------------------------------------------------------------#
mp <- map('world',xlim=range(d$Longitude,na.rm=T),ylim=range(d$Latitude, na.rm=T),col='grey',add=T, fill=T, border='grey90',plot=F)
mp
IDs <- sapply(strsplit(mp$names, ":"), function(x) x[1])
mp. <- map2SpatialPolygons(mp, IDs=IDs, proj4string=CRS("+proj=longlat +datum=WGS84"))
require(maptools)
install.packages('maptools')
source('functions.R')#
require(maptools)#
require(mapdata)
install.packages('rgeos')
source('functions.R')#
require(maptools)#
require(mapdata)
#------------------------------------------------------------------#
sql.command <- "SELECT * FROM COREX.Sites"#
d <- sql.wrapper(sql.command,user,password)
mp <- map('world',xlim=range(d$Longitude,na.rm=T),ylim=range(d$Latitude, na.rm=T),col='grey',add=T, fill=T, border='grey90',plot=F)
IDs <- sapply(strsplit(mp$names, ":"), function(x) x[1])
mp. <- map2SpatialPolygons(mp, IDs=IDs, proj4string=CRS("+proj=longlat +datum=WGS84"))
mp. <- gBuffer(mp., byid=TRUE, width=0)
require(rgeos)
#------------------------------------------------------------------#
source('functions.R')#
require(maptools)#
require(mapdata)#
require(rgeos)
mp. <- rgeos::gBuffer(mp., byid=TRUE, width=0)
source('functions.R')#
require(maptools)#
require(mapdata)#
#------------------------------------------------------------------#
sql.command <- "SELECT * FROM COREX.Sites"#
d <- sql.wrapper(sql.command,user,password)#
#------------------------------------------------------------------#
mp <- map('world',xlim=range(d$Longitude,na.rm=T),ylim=range(d$Latitude, na.rm=T),col='grey',add=T, fill=T, border='grey90',plot=F)#
IDs <- sapply(strsplit(mp$names, ":"), function(x) x[1])#
mp. <- map2SpatialPolygons(mp, IDs=IDs, proj4string=CRS("+proj=longlat +datum=WGS84"))#
mp. <- rgeos::gBuffer(mp., byid=TRUE, width=0)
coords <- phase.data[,c('Longitude','Latitude')]
coords <- d[,c('Longitude','Latitude')]
coords <- subset(coords, !is.na(Longitude))
pts <- SpatialPoints(coords,proj4string=CRS("+proj=longlat +datum=WGS84"))
pts <- as.data.frame(pts[mp.])
mp
plot(mp)
#------------------------------------------------------------------#
xmn <- min(d$Longitude, na.rm=T)#
xmx <- max(d$Longitude, na.rm=T)#
ymn <- min(d$Latitude na.rm=T)#
ymx <- max(d$Latitude, na.rm=T)
xmn <- min(d$Longitude, na.rm=T)#
xmx <- max(d$Longitude, na.rm=T)#
ymn <- min(d$Latitude, na.rm=T)#
ymx <- max(d$Latitude, na.rm=T)
plot(NULL,xlim=c(xmn,xmx),ylim=c(ymn,ymx),bty='n',xaxs='i',yaxs='i',main=main,xlab='',ylab='',xaxt='n',yaxt='n')
plot(NULL,xlim=c(xmn,xmx),ylim=c(ymn,ymx),bty='n',xaxs='i',yaxs='i',main='',xlab='',ylab='',xaxt='n',yaxt='n')
polygon(x=c(xmn,xmx,xmx,xmn),y=c(ymn,ymn,ymx,ymx),col='lightgrey',border=NA)
map('world',xlim=c(xmn,xmx),ylim=c(ymn,ymx),col='grey',add=T, fill=T, border='grey90')
points(d$Longitude,d$Latitude,pch=20, col='red',cex=1.5)
polygon(x=c(xmn,xmx,xmx,xmn),y=c(ymn,ymn,ymx,ymx),col='lightgrey',border=NA)#
	map('world',xlim=c(xmn,xmx),ylim=c(ymn,ymx),col='grey',add=T, fill=T, border='grey90')#
	points(d$Longitude,d$Latitude, col='red',cex=1.5)
polygon(x=c(xmn,xmx,xmx,xmn),y=c(ymn,ymn,ymx,ymx),col='lightgrey',border=NA)#
	map('world',xlim=c(xmn,xmx),ylim=c(ymn,ymx),col='skyblue',add=T, fill=T, border='grey90')#
	points(d$Longitude,d$Latitude, col='red',cex=1.5)
polygon(x=c(xmn,xmx,xmx,xmn),y=c(ymn,ymn,ymx,ymx),col='steelblue',border=NA)#
	map('world',xlim=c(xmn,xmx),ylim=c(ymn,ymx),col='lightgrey',add=T, fill=T, border='grey90')#
	points(d$Longitude,d$Latitude, col='red',cex=1.5)
polygon(x=c(xmn,xmx,xmx,xmn),y=c(ymn,ymn,ymx,ymx),col='steelblue',border=NA)#
	map('world',xlim=c(xmn,xmx),ylim=c(ymn,ymx),col='green',add=T, fill=T, border='grey90')#
	points(d$Longitude,d$Latitude, col='firebrick',cex=1.5)
polygon(x=c(xmn,xmx,xmx,xmn),y=c(ymn,ymn,ymx,ymx),col='steelblue',border=NA)#
	map('world',xlim=c(xmn,xmx),ylim=c(ymn,ymx),col='olive',add=T, fill=T, border='grey90')#
	points(d$Longitude,d$Latitude, col='firebrick',cex=1.5)
polygon(x=c(xmn,xmx,xmx,xmn),y=c(ymn,ymn,ymx,ymx),col='steelblue',border=NA)#
	map('world',xlim=c(xmn,xmx),ylim=c(ymn,ymx),col='olivegreen',add=T, fill=T, border='grey90')#
	points(d$Longitude,d$Latitude, col='firebrick',cex=1.5)
polygon(x=c(xmn,xmx,xmx,xmn),y=c(ymn,ymn,ymx,ymx),col='steelblue',border=NA)#
	map('world',xlim=c(xmn,xmx),ylim=c(ymn,ymx),col='seagreen',add=T, fill=T, border='grey90')#
	points(d$Longitude,d$Latitude, col='firebrick',cex=1.5)
points(d$Longitude,d$Latitude, col='firebrick',pch=20, cex=1.5)
plot(NULL,xlim=c(xmn,xmx),ylim=c(ymn,ymx),bty='n',xaxs='i',yaxs='i',main='',xlab='',ylab='',xaxt='n',yaxt='n')#
	polygon(x=c(xmn,xmx,xmx,xmn),y=c(ymn,ymn,ymx,ymx),col='steelblue',border=NA)#
	map('world',xlim=c(xmn,xmx),ylim=c(ymn,ymx),col='seagreen',add=T, fill=T, border='grey90')#
	points(d$Longitude,d$Latitude, col='firebrick',pch=20, cex=1)
par(mar=c(0,0,0,0))#
plot(NULL,xlim=c(xmn,xmx),ylim=c(ymn,ymx),bty='n',xaxs='i',yaxs='i',main='',xlab='',ylab='',xaxt='n',yaxt='n')#
polygon(x=c(xmn,xmx,xmx,xmn),y=c(ymn,ymn,ymx,ymx),col='steelblue',border=NA)#
map('world',xlim=c(xmn,xmx),ylim=c(ymn,ymx),col='seagreen',add=T, fill=T, border='grey90')#
points(d$Longitude,d$Latitude, col='firebrick',pch=20, cex=1)
par(mar=c(0,0,0,0))#
plot(NULL,xlim=c(xmn,xmx),ylim=c(ymn,ymx),bty='n',xaxs='i',yaxs='i',main='',xlab='',ylab='',xaxt='n',yaxt='n')#
polygon(x=c(xmn,xmx,xmx,xmn),y=c(ymn,ymn,ymx,ymx),col='steelblue',border=NA)#
map('world',xlim=c(xmn,xmx),ylim=c(ymn,ymx),col='darkolivegreen',add=T, fill=T, border='grey90')#
points(d$Longitude,d$Latitude, col='firebrick',pch=20, cex=1)
ymx <- max(d$Latitude, na.rm=T)#
#
par(mar=c(0,0,0,0))#
plot(NULL,xlim=c(xmn,xmx),ylim=c(ymn,ymx),bty='n',xaxs='i',yaxs='i',main='',xlab='',ylab='',xaxt='n',yaxt='n')#
polygon(x=c(xmn,xmx,xmx,xmn),y=c(ymn,ymn,ymx,ymx),col='steelblue',border=NA)#
map('world',xlim=c(xmn,xmx),ylim=c(ymn,ymx),col='grey',add=T, fill=T, border='grey90')#
points(d$Longitude,d$Latitude, col='firebrick',pch=20, cex=1)
"SELECT table_comment FROM INFORMATION_SCHEMA.TABLES WHERE table_schema='COREX' AND table_name='Phases';"
source('functions.R')
sql.command <- "SELECT table_comment FROM INFORMATION_SCHEMA.TABLES WHERE table_schema='COREX' AND table_name='Phases';"
d <- sql.wrapper(sql.command,user,password)
d
str(d)
dim(str)
dim(d)
d[1,1]
length(d[1,1])
d[1]
d[1,1]
q <- readLines('../../Gist/bananbucket.md')
list.files('../../')
q <- readLines('../../Gist/bananabucket.md')
q
length(q)
q <- read.txt('../../Gist/bananabucket.md')
q <- read.csv('../../Gist/bananabucket.md')
q
sql.command <- "SELECT table_comment FROM INFORMATION_SCHEMA.TABLES WHERE table_schema='COREX' AND table_name='Phases';"#
d <- sql.wrapper(sql.command,user,password)
d
writeLines(d[1,1], con='../../Gist/Phases.md')
writeLines(d[1,1], con='../../Gist/Phases.md')
writeLines(d[1,1], con='../../Gist/Phases.md')
source('make.descriptions.R')
